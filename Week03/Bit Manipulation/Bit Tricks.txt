AND   &
OR    |
XOR   ^
NOT   !
Left Shift << [N will be 2N for Left Shift]
Right Shift >> [N will be N/2 for Right Shift]

            XOR Operation
01. a ^ 0 = a (XOR operation between 0 and a; return a)
02. a ^ a = 0 (XOR operation between same number, return 0)
03. arr = [2, 3, 6, 8, 5, 6, 8, 3, 2], --Find the element that occurs an odd number of times from array arr? Solution: XOR operation between all elements of array arr will return 5.
04. If A ^ B = C 
    then A ^ C = B 
    and B ^ C = A


            AND Operation
a & 1 == 0 (If return 0, then a is EVEN Number)
a & 1 == 1 (If return 1, then a is ODD Number)
a & (a - 1) convert last set bit of a to 0
a & (a - 1) == 0 [If return 0, then a is the power of two 2^x (a = 1, 2, 4, 8, 16, 32, .....)]


